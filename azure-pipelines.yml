pool:
  name: 'dev-access'

variables:
  version: 'backend_$(Build.BuildId)'

stages:

# ─────────────────────────────
- stage: CheckoutCode
  displayName: 'Checkout Code'
  jobs:
  - job: checkout
    displayName: 'Checkout Code'
    steps:
    - checkout: self

# ─────────────────────────────
- stage: BuildDockerImage
  displayName: 'Build Docker Image'
  dependsOn: CheckoutCode
  jobs:
  - job: build
    displayName: 'Build Docker Image'
    steps:

    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: login
        containerRegistry: 'ACR_Access'  # ✅ Unified service connection

    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        containerRegistry: 'ACR_Access'
        repository: 'perseverance-project'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(version)
      name: buildImage

# ─────────────────────────────
- stage: PushDockerImage
  displayName: 'Push Docker Image'
  dependsOn: BuildDockerImage
  jobs:
  - job: push
    displayName: 'Push Image to ACR'
    steps:

    - task: Docker@2
      displayName: 'Docker Login to ACR'
      inputs:
        containerRegistry: 'ACR_Access'
        command: 'login'

    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        containerRegistry: 'ACR_Access'
        repository: 'perseverance-project'
        command: 'push'
        tags: |
          $(version)

# ─────────────────────────────
- stage: CleanupDockerImages
  displayName: 'Clean Up Docker Images'
  dependsOn: PushDockerImage
  jobs:
  - job: cleanup
    displayName: 'Clean Up Docker Images'
    steps:
    - script: |
        docker rmi -f $(docker images -aq) || true
      displayName: 'Remove all Docker images'

# ─────────────────────────────
- stage: ModifyAndPublishYaml
  displayName: 'Modify and Publish Kubernetes Manifest'
  dependsOn: CleanupDockerImages
  jobs:
  - job: modifyAndPublish
    displayName: 'Modify Kubernetes Manifest and Publish'
    steps:

    - script: |
        echo "Replacing VERSION with $(version) in backend.yml"
        sed -i "s|VERSION|$(version)|g" backend.yml
        cat backend.yml
        cp backend.yml $(Build.ArtifactStagingDirectory)/
      displayName: 'Modify Kubernetes Manifest'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Modified Kubernetes Manifest'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'k8s-manifest'
        publishLocation: 'Container'